import React, {useEffect, useState} from 'react';
import PlayerCard from '../components/OverallPlayerCard';
import netlifyIdentity from 'netlify-identity-widget';
import { GoogleSpreadsheet } from 'google-spreadsheet';

function openNetlifyModal() {
  const netlifyIdentity = window.netlifyIdentity;

  if(netlifyIdentity) {
    netlifyIdentity.open();
  } else {
    console.log('netlifyIdentity not defined')
  }
}

const {REACT_APP_SHEET_ID} = process.env;
const {REACT_APP_GOOGLE_CLIENT_EMAIL} = process.env;
const {REACT_APP_GOOGLE_PRIVATE_KEY} = process.env;

const doc = new GoogleSpreadsheet(REACT_APP_SHEET_ID);

(async function() {
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: REACT_APP_GOOGLE_CLIENT_EMAIL,
        private_key: REACT_APP_GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n'),
      });
}())

export default function Home() {
  const [playerRows, setPlayerRows] = useState([]);
  const [sheet, setSheet] = useState({});

  const loadSheet = async () => {
    await doc.loadInfo()
        .then((response) => {
            setSheet(doc.sheetsByIndex[0]);
        })
        .then(async () => {
          const rows = await sheet.getRows()
          setPlayerRows(rows)
        })
  }

  useEffect(() => {
    loadSheet()
  }, [])

    return (
        <div>
            <h1>Gronert's Horseshoe</h1>
            <button onClick={() => openNetlifyModal()}>Login/Sign Up</button>
            <table>
                <thead>
                    <tr>
                        <th>Player Name</th>
                        <th>Total Buy Ins</th>
                        <th>Total Winnings</th>
                        <th>+/-</th>  
                    </tr>
                </thead>
                <tbody>
                    {playerRows && playerRows.map((row) => {
                        return (
                            <PlayerCard playerName={row.playerName} totalBuyIns={row.buyIn}
                                        key={playerRows.indexOf(row)} />
                        )
                    })}
                </tbody>
            </table>
        </div>
    )
}
